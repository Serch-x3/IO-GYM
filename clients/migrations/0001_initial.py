# Generated by Django 2.2.6 on 2019-11-13 02:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='clientesView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'clientesView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CLIENTS',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(blank=True, max_length=40)),
                ('client_surname', models.CharField(blank=True, max_length=40, null=True)),
                ('client_birthday', models.DateField()),
                ('client_phone', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000000, message='El Numero debe ser de al menos 7 dígitos y no negativo'), django.core.validators.MaxValueValidator(9999999999, message='El Numero debe ser de máximo 10 dígitos')])),
                ('client_emergency_phone', models.BigIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1000000, message='El Numero debe ser de al menos 7 dígitos y no negativo'), django.core.validators.MaxValueValidator(9999999999, message='El Numero debe ser de máximo 10 dígitos')])),
                ('client_email', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.EmailValidator(message='Email inválido')])),
                ('client_gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('N', 'No binario')], max_length=1, null=True)),
            ],
            options={
                'db_table': 'CLIENTS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GYMCLASSES',
            fields=[
                ('gymclass_id', models.AutoField(primary_key=True, serialize=False)),
                ('gymclass_name', models.CharField(blank=True, max_length=40)),
            ],
            options={
                'db_table': 'GYMCLASSES',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HOURS',
            fields=[
                ('hour_id', models.AutoField(primary_key=True, serialize=False)),
                ('hour_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'HOURS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRAINERS',
            fields=[
                ('trainer_id', models.AutoField(primary_key=True, serialize=False)),
                ('trainer_name', models.CharField(blank=True, max_length=40)),
                ('trainer_surname', models.CharField(blank=True, max_length=40, null=True)),
                ('trainer_birthday', models.DateField()),
                ('trainer_phone', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000000, message='El Numero debe ser de al menos 7 dígitos y no negativo'), django.core.validators.MaxValueValidator(9999999999, message='El Numero debe ser de máximo 10 dígitos')])),
                ('trainer_email', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.EmailValidator(message='Email inválido')])),
                ('trainer_gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('N', 'No binario')], max_length=1, null=True)),
                ('trainer_address', models.CharField(blank=True, max_length=60, null=True)),
                ('trainer_emergency_phone', models.BigIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1000000, message='El Numero debe ser de al menos 7 dígitos y no negativo'), django.core.validators.MaxValueValidator(9999999999, message='El Numero debe ser de máximo 10 dígitos')])),
                ('trainer_rfc', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.MinLengthValidator(12)])),
                ('trainer_password', models.CharField(blank=True, max_length=40)),
            ],
            options={
                'db_table': 'TRAINNERS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WEEKDAYS',
            fields=[
                ('weekdays_id', models.AutoField(primary_key=True, serialize=False)),
                ('weekdays_name', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], max_length=15, unique=True)),
            ],
            options={
                'db_table': 'WEEKDAYS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TRAINERS_ATTENDANCES',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=10)),
                ('trainer_id', models.ForeignKey(blank=True, db_column='trainer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='clients.TRAINERS')),
            ],
            options={
                'db_table': 'TRAINNERS_ATTENDANCES',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MEMBERSHIPS',
            fields=[
                ('membership_id', models.AutoField(primary_key=True, serialize=False)),
                ('register_date', models.DateField(auto_now_add=True)),
                ('expiration_date', models.DateField()),
                ('client_id', models.OneToOneField(blank=True, db_column='client_id', on_delete=django.db.models.deletion.DO_NOTHING, to='clients.CLIENTS')),
                ('included_clsses', models.ManyToManyField(to='clients.GYMCLASSES')),
            ],
            options={
                'db_table': 'MEMBERSHIPS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GROUPS',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('gymclass_id', models.ForeignKey(blank=True, db_column='gymclass_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clients.GYMCLASSES')),
                ('hour_id', models.ForeignKey(blank=True, db_column='hour_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clients.HOURS')),
                ('trainer_id', models.ForeignKey(blank=True, db_column='trainer_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clients.TRAINERS')),
                ('weekday_id', models.ForeignKey(blank=True, db_column='weekdays_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clients.WEEKDAYS')),
            ],
            options={
                'db_table': 'GROUPS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CLIENTS_ATTENDANCES',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('client_id', models.ForeignKey(blank=True, db_column='client_id', on_delete=django.db.models.deletion.DO_NOTHING, to='clients.CLIENTS')),
            ],
            options={
                'db_table': 'CLIENT_ATTENDANCES',
                'managed': True,
            },
        ),
    ]
